{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [
    "ColorEnum",
    "cc",
    "Enum",
    "Class",
    "extends",
    "Component",
    "editor",
    "requireComponent",
    "Graphics",
    "properties",
    "_leftBlock",
    "_rightBlock",
    "_upBlock",
    "_downBlock",
    "_speed",
    "g",
    "_fsm",
    "_sUp",
    "_currentColor",
    "white",
    "currentColor",
    "type",
    "get",
    "set",
    "value",
    "node",
    "getChildByName",
    "getComponent",
    "fillColor",
    "Color",
    "WHITE",
    "strokeColor",
    "BLACK",
    "_touchColorNum",
    "onLoad",
    "v2",
    "manager",
    "director",
    "getCollisionManager",
    "enabled",
    "require",
    "create",
    "startup",
    "on",
    "onTouchStart",
    "onTouchEnd",
    "onTouchMove",
    "systemEvent",
    "onKeyDown",
    "onKeyUp",
    "e",
    "can",
    "ready",
    "parent",
    "group",
    "_moveAble",
    "ctx",
    "clear",
    "offset",
    "width",
    "anchorX",
    "height",
    "anchorY",
    "moveTo",
    "x",
    "y",
    "targetDir",
    "pNeg",
    "convertToNodeSpaceAR",
    "getLocation",
    "lineTo",
    "stroke",
    "current",
    "fly",
    "window",
    "throwTime",
    "keyCode",
    "KEY",
    "d",
    "idle",
    "s",
    "black",
    "onCollisionEnter",
    "other",
    "self",
    "targetPosition",
    "convertToWorldSpaceAR",
    "position",
    "selfAabb",
    "world",
    "aabb",
    "otherAabb",
    "selfPreAabb",
    "preAabb",
    "otherPreAabb",
    "localBlockArray",
    "xMin",
    "xMax",
    "push",
    "Math",
    "abs",
    "yMax",
    "yMin",
    "blockArray",
    "undefined",
    "uuid",
    "onCollisionExit",
    "canvas",
    "find",
    "item",
    "update",
    "dt",
    "pAdd",
    "pMult"
  ],
  "mappings": ";;AAAA,IAAIA,YAAYC,GAAGC,IAAH,CAAQ;AACpB,aAAQ,CADY;AAEpB,aAAQ;AAFY,CAAR,CAAhB;AAIAD,GAAGE,KAAH,CAAS;AACLC,aAASH,GAAGI,SADP;;AAGLC,YAAQ;AACJC,0BAAkBN,GAAGO;AADjB,KAHH;;AAOLC,gBAAY;AACRC,oBAAY,CADJ;AAERC,qBAAa,CAFL;AAGRC,kBAAU,CAHF;AAIRC,oBAAY,CAJJ;AAKRC,gBAAQ,IALA;AAMRC,WAAG,CANK;AAORC,cAAM,IAPE;AAQRC,cAAK,IARG;AASRC,uBAAclB,UAAUmB,KAThB;AAURC,sBAAa;AACTC,kBAAMrB,SADG;AAETsB,iBAAK,eAAU;AACX,uBAAO,KAAKJ,aAAZ;AACH,aAJQ;AAKTK,iBAAK,aAASC,KAAT,EAAe;AAChB,qBAAKN,aAAL,GAAqBM,KAArB;AACA,oBAAGA,SAASxB,UAAUmB,KAAtB,EAA4B;AACxB,yBAAKM,IAAL,CAAUC,cAAV,CAAyB,eAAzB,EAA0CC,YAA1C,CAAuD1B,GAAGO,QAA1D,EAAoEoB,SAApE,GAAgF3B,GAAG4B,KAAH,CAASC,KAAzF;AACA,yBAAKL,IAAL,CAAUC,cAAV,CAAyB,eAAzB,EAA0CC,YAA1C,CAAuD1B,GAAGO,QAA1D,EAAoEuB,WAApE,GAAkF9B,GAAG4B,KAAH,CAASG,KAA3F;AACH,iBAHD,MAGK;AACD,yBAAKP,IAAL,CAAUC,cAAV,CAAyB,eAAzB,EAA0CC,YAA1C,CAAuD1B,GAAGO,QAA1D,EAAoEoB,SAApE,GAAgF3B,GAAG4B,KAAH,CAASG,KAAzF;AACA,yBAAKP,IAAL,CAAUC,cAAV,CAAyB,eAAzB,EAA0CC,YAA1C,CAAuD1B,GAAGO,QAA1D,EAAoEuB,WAApE,GAAkF9B,GAAG4B,KAAH,CAASC,KAA3F;AACH;AACJ;AAdQ,SAVL;AA0BRG,wBAAgB;AA1BR,KAPP;;AAoCLC,YAAQ,kBAAY;AAChB,aAAKpB,MAAL,GAAcb,GAAGkC,EAAH,CAAM,CAAN,EAAQ,CAAR,CAAd;AACA,YAAIC,UAAUnC,GAAGoC,QAAH,CAAYC,mBAAZ,EAAd;AACAF,gBAAQG,OAAR,GAAkB,IAAlB;AACA,aAAKvB,IAAL,GAAYwB,QAAQ,YAAR,EAAsBC,MAAtB,EAAZ;AACA,aAAKzB,IAAL,CAAU0B,OAAV;AACA,aAAKjB,IAAL,CAAUkB,EAAV,CAAa,YAAb,EAA0B,KAAKC,YAA/B,EAA4C,IAA5C;AACA,aAAKnB,IAAL,CAAUkB,EAAV,CAAa,UAAb,EAAwB,KAAKE,UAA7B,EAAwC,IAAxC;AACA,aAAKpB,IAAL,CAAUkB,EAAV,CAAa,WAAb,EAAyB,KAAKG,WAA9B,EAA0C,IAA1C;AACA,aAAKrB,IAAL,CAAUkB,EAAV,CAAa,aAAb,EAA2B,KAAKE,UAAhC,EAA2C,IAA3C;;AAEA5C,WAAG8C,WAAH,CAAeJ,EAAf,CAAkB,SAAlB,EAA4B,KAAKK,SAAjC,EAA2C,IAA3C;AACA/C,WAAG8C,WAAH,CAAeJ,EAAf,CAAkB,OAAlB,EAA0B,KAAKM,OAA/B,EAAuC,IAAvC;AACA;AACH,KAlDI;;AAoDL;AACA;;AAEA;;AAEAL,kBAAc,sBAASM,CAAT,EAAW;AACrB,YAAG,KAAKlC,IAAL,CAAUmC,GAAV,CAAc,OAAd,CAAH,EAA0B;AACtB,iBAAKnC,IAAL,CAAUoC,KAAV;AACA,gBAAG,KAAK3B,IAAL,CAAU4B,MAAV,CAAiBC,KAAjB,IAA0B,KAA7B,EAAmC;AAC/B,qBAAK7B,IAAL,CAAU4B,MAAV,CAAiB1B,YAAjB,CAA8B,YAA9B,EAA4C4B,SAA5C,GAAwD,KAAxD;AACH;AACD,gBAAIC,MAAM,KAAK7B,YAAL,CAAkB1B,GAAGO,QAArB,CAAV;AACAgD,gBAAIC,KAAJ;AACA,gBAAIC,SAASzD,GAAGkC,EAAH,CAAM,KAAKV,IAAL,CAAUkC,KAAV,GAAkB,KAAKlC,IAAL,CAAUmC,OAAlC,EAA0C,KAAKnC,IAAL,CAAUoC,MAAV,GAAmB,KAAKpC,IAAL,CAAUqC,OAAvE,CAAb;AACAN,gBAAIO,MAAJ,CAAWL,OAAOM,CAAlB,EAAoBN,OAAOO,CAA3B;AACA,gBAAIC,YAAYjE,GAAGkE,IAAH,CAAQ,KAAK1C,IAAL,CAAU2C,oBAAV,CAA+BlB,EAAEmB,WAAF,EAA/B,CAAR,CAAhB;AACAb,gBAAIc,MAAJ,CAAWJ,UAAUF,CAAV,GAAcN,OAAOM,CAAhC,EAAkCE,UAAUD,CAAV,GAAcP,OAAOO,CAAvD;AACAT,gBAAIe,MAAJ;AACH;AACJ,KAvEI;;AAyELzB,iBAAa,qBAASI,CAAT,EAAW;;AAEpB;AACA,YAAG,KAAKlC,IAAL,CAAUwD,OAAV,IAAqB,UAAxB,EAAmC;AAC/B,gBAAIhB,MAAM,KAAK7B,YAAL,CAAkB1B,GAAGO,QAArB,CAAV;AACAgD,gBAAIC,KAAJ;AACA,gBAAIC,SAASzD,GAAGkC,EAAH,CAAM,KAAKV,IAAL,CAAUkC,KAAV,GAAkB,KAAKlC,IAAL,CAAUmC,OAAlC,EAA0C,KAAKnC,IAAL,CAAUoC,MAAV,GAAmB,KAAKpC,IAAL,CAAUqC,OAAvE,CAAb;AACAN,gBAAIO,MAAJ,CAAWL,OAAOM,CAAlB,EAAoBN,OAAOO,CAA3B;AACA,gBAAIC,YAAYjE,GAAGkE,IAAH,CAAQ,KAAK1C,IAAL,CAAU2C,oBAAV,CAA+BlB,EAAEmB,WAAF,EAA/B,CAAR,CAAhB;AACAb,gBAAIc,MAAJ,CAAWJ,UAAUF,CAAV,GAAcN,OAAOM,CAAhC,EAAkCE,UAAUD,CAAV,GAAcP,OAAOO,CAAvD;AACAT,gBAAIe,MAAJ;AACH;AACJ,KArFI;;AAwFL1B,gBAAY,oBAASK,CAAT,EAAW;AACnB,YAAG,KAAKlC,IAAL,CAAUmC,GAAV,CAAc,KAAd,CAAH,EAAwB;AACpB,iBAAKnC,IAAL,CAAUyD,GAAV;AACA,gBAAG,KAAKhD,IAAL,CAAU4B,MAAV,CAAiBC,KAAjB,IAA0B,KAA7B,EAAmC;AAC/B,qBAAK7B,IAAL,CAAU4B,MAAV,CAAiB1B,YAAjB,CAA8B,YAA9B,EAA4C4B,SAA5C,GAAwD,IAAxD;AACH;AACDmB,mBAAOC,SAAP;AACA,iBAAK7D,MAAL,GAAcb,GAAGkE,IAAH,CAAQ,KAAK1C,IAAL,CAAU2C,oBAAV,CAA+BlB,EAAEmB,WAAF,EAA/B,CAAR,CAAd;AACA,gBAAIb,MAAM,KAAK7B,YAAL,CAAkB1B,GAAGO,QAArB,CAAV;AACAgD,gBAAIC,KAAJ;AACH;AACJ,KAnGI;;AAqGLT,eAAW,mBAASE,CAAT,EAAW;AAClB,YAAGA,EAAE0B,OAAF,IAAa3E,GAAG4E,GAAH,CAAOC,CAAvB,EAAyB;AACrB,gBAAG,KAAK9D,IAAL,CAAUwD,OAAV,IAAqB,UAAxB,EAAmC;AAC/B,qBAAKxD,IAAL,CAAU+D,IAAV;AACA,oBAAG,KAAKtD,IAAL,CAAU4B,MAAV,CAAiBC,KAAjB,IAA0B,KAA7B,EAAmC;AAC/B,yBAAK7B,IAAL,CAAU4B,MAAV,CAAiB1B,YAAjB,CAA8B,YAA9B,EAA4C4B,SAA5C,GAAwD,IAAxD;AACH;AACD,oBAAIC,MAAM,KAAK7B,YAAL,CAAkB1B,GAAGO,QAArB,CAAV;AACAgD,oBAAIC,KAAJ;AACH;AACJ;AACD,YAAGP,EAAE0B,OAAF,IAAa3E,GAAG4E,GAAH,CAAOG,CAAvB,EAAyB;AACrB,gBAAG,KAAK/C,cAAL,IAAuB,CAAvB,IAA4B,KAAKhB,IAApC,EAAyC;AACrC,qBAAKA,IAAL,GAAY,KAAZ;AACA,oBAAG,KAAKG,YAAL,IAAqBpB,UAAUmB,KAAlC,EAAwC;AACpC,yBAAKC,YAAL,GAAoBpB,UAAUiF,KAA9B;AACH,iBAFD,MAEK;AACD,yBAAK7D,YAAL,GAAoBpB,UAAUmB,KAA9B;AACH;AACJ;AACJ;AACJ,KA1HI;;AA4HL8B,aAAS,iBAASC,CAAT,EAAW;AAChB,YAAGA,EAAE0B,OAAF,IAAa3E,GAAG4E,GAAH,CAAOG,CAAvB,EAAyB;AACrB,iBAAK/D,IAAL,GAAY,IAAZ;AACH;AACJ,KAhII;;AAmILiE,sBAAkB,0BAASC,KAAT,EAAeC,IAAf,EAAoB;AAClC,YAAGD,MAAM1D,IAAN,CAAW6B,KAAX,IAAoB,KAAvB,EAA6B;AACrB,gBAAI+B,iBAAiBF,MAAM1D,IAAN,CAAW2C,oBAAX,CAAgC,KAAK3C,IAAL,CAAU4B,MAAV,CAAiBiC,qBAAjB,CAAuC,KAAK7D,IAAL,CAAU8D,QAAjD,CAAhC,CAArB;AACA,iBAAK9D,IAAL,CAAU4B,MAAV,GAAmB8B,MAAM1D,IAAzB;AACA,iBAAKA,IAAL,CAAU8D,QAAV,GAAqBF,cAArB;AACA;AACP;AACD,YAAGF,MAAM1D,IAAN,CAAW6B,KAAX,IAAoB,OAApB,IAA+B6B,MAAM1D,IAAN,CAAW6B,KAAX,IAAoB,OAAtD,EAA8D;AAC1D,iBAAKrB,cAAL;AACH;AACD,YAAGkD,MAAM1D,IAAN,CAAW6B,KAAX,IAAoB,OAApB,IAA+B,KAAKpC,aAAL,IAAsBlB,UAAUmB,KAA/D,IAAwEgE,MAAM1D,IAAN,CAAW6B,KAAX,IAAoB,OAApB,IAA+B,KAAKpC,aAAL,IAAsBlB,UAAUiF,KAA1I,EAAiJ;AAC7I;AACH;AACD,YAAGE,MAAM1D,IAAN,CAAW6B,KAAX,IAAoB,MAAvB,EAA8B;AAC1B;AACH;AACD,YAAIkC,WAAWJ,KAAKK,KAAL,CAAWC,IAA1B;AACA,YAAIC,YAAYR,MAAMM,KAAN,CAAYC,IAA5B;AACA,YAAIE,cAAcR,KAAKK,KAAL,CAAWI,OAA7B;AACA,YAAIC,eAAeX,MAAMM,KAAN,CAAYI,OAA/B;;AAEA,YAAIE,kBAAkB,EAAtB;;AAEA,YAAGH,YAAYI,IAAZ,IAAoBF,aAAaG,IAAjC,IAAyCT,SAASQ,IAAT,IAAiBL,UAAUM,IAAvE,EAA4E;AACxE;AACA,iBAAKvF,UAAL;AACAqF,4BAAgBG,IAAhB,CAAqB,YAArB;AACA,iBAAKzE,IAAL,CAAUuC,CAAV,IAAemC,KAAKC,GAAL,CAASZ,SAASQ,IAAT,GAAgBL,UAAUM,IAAnC,CAAf;AACH;AACD,YAAGL,YAAYK,IAAZ,IAAoBH,aAAaE,IAAjC,IAAyCR,SAASS,IAAT,IAAiBN,UAAUK,IAAvE,EAA4E;AACxE;AACA,iBAAKrF,WAAL;AACAoF,4BAAgBG,IAAhB,CAAqB,aAArB;AACA,iBAAKzE,IAAL,CAAUuC,CAAV,IAAemC,KAAKC,GAAL,CAASZ,SAASS,IAAT,GAAgBN,UAAUK,IAAnC,CAAf;AACH;AACD,YAAGJ,YAAYS,IAAZ,IAAoBP,aAAaQ,IAAjC,IAAyCd,SAASa,IAAT,IAAiBV,UAAUW,IAAvE,EAA4E;AACxE;AACA,iBAAK1F,QAAL;AACAmF,4BAAgBG,IAAhB,CAAqB,UAArB;AACA,iBAAKzE,IAAL,CAAUwC,CAAV,IAAekC,KAAKC,GAAL,CAASZ,SAASa,IAAT,GAAgBV,UAAUW,IAAnC,CAAf;AACH;AACD,YAAGV,YAAYU,IAAZ,IAAoBR,aAAaO,IAAjC,IAAyCb,SAASc,IAAT,IAAiBX,UAAUU,IAAvE,EAA4E;AACxE;AACA,iBAAKxF,UAAL;AACAkF,4BAAgBG,IAAhB,CAAqB,YAArB;AACA,iBAAKzE,IAAL,CAAUuC,CAAV,IAAemC,KAAKC,GAAL,CAASZ,SAASc,IAAT,GAAgBX,UAAUU,IAAnC,CAAf;AACA,gBAAG,KAAKrF,IAAL,CAAUmC,GAAV,CAAc,MAAd,CAAH,EAAyB;AACrB,qBAAKnC,IAAL,CAAU+D,IAAV;AACH;AACJ;AACD,YAAGI,MAAMoB,UAAN,IAAoBC,SAAvB,EAAiC;AAC7BrB,kBAAMoB,UAAN,GAAmB,EAAnB;AACH;AACDpB,cAAMoB,UAAN,CAAiBnB,KAAK3D,IAAL,CAAUgF,IAA3B,IAAmCV,eAAnC;AAEH,KA1LI;;AA4LLW,qBAAiB,yBAASvB,KAAT,EAAeC,IAAf,EAAoB;AACjC,YAAGD,MAAM1D,IAAN,CAAW6B,KAAX,IAAoB,KAApB,IAA6B6B,MAAM1D,IAAN,CAAWgF,IAAX,IAAmB,KAAKhF,IAAL,CAAU4B,MAAV,CAAiBoD,IAApE,EAAyE;AACjE,gBAAIE,SAAS1G,GAAG2G,IAAH,CAAQ,QAAR,CAAb;AACA,gBAAIvB,iBAAiBsB,OAAOvC,oBAAP,CAA4B,KAAK3C,IAAL,CAAU4B,MAAV,CAAiBiC,qBAAjB,CAAuC,KAAK7D,IAAL,CAAU8D,QAAjD,CAA5B,CAArB;AACA,iBAAK9D,IAAL,CAAU4B,MAAV,GAAmBsD,MAAnB;AACA,iBAAKlF,IAAL,CAAU8D,QAAV,GAAqBF,cAArB;AACA;AACP;AACD,YAAGF,MAAM1D,IAAN,CAAW6B,KAAX,IAAoB,OAApB,IAA+B6B,MAAM1D,IAAN,CAAW6B,KAAX,IAAoB,OAAtD,EAA8D;AAC1D,iBAAKrB,cAAL;AACH;AACD,YAAGkD,MAAM1D,IAAN,CAAW6B,KAAX,IAAoB,OAApB,IAA+B,KAAKpC,aAAL,IAAsBlB,UAAUmB,KAA/D,IAAwEgE,MAAM1D,IAAN,CAAW6B,KAAX,IAAoB,OAApB,IAA+B,KAAKpC,aAAL,IAAsBlB,UAAUiF,KAA1I,EAAgJ;AAC5I;AACH;AACD,YAAGE,MAAM1D,IAAN,CAAW6B,KAAX,IAAoB,MAAvB,EAA8B;AAC1B;AACH;AACD,YAAG6B,MAAMoB,UAAN,IAAoBC,SAAvB,EAAiC;AAAA;AAAA;AAAA;;AAAA;AAC7B,qCAAgBrB,MAAMoB,UAAN,CAAiBnB,KAAK3D,IAAL,CAAUgF,IAA3B,CAAhB,8HAAiD;AAAA,wBAAzCI,IAAyC;;AAC7C,yBAAKA,IAAL;AACH;AAH4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIhC;AACJ,KAlNI;;AAoNLC,YAAQ,gBAASC,EAAT,EAAY;AAChB,YAAG,CAAC,KAAKlG,UAAT,EAAoB;AAAC,iBAAKC,MAAL,CAAYmD,CAAZ,GAAgB,KAAKnD,MAAL,CAAYmD,CAAZ,GAAgB,KAAKlD,CAAL,GAASgG,EAAzC;AAA6C;AAClE,YAAG,CAAC,CAAC,KAAKnG,QAAP,IAAmB,KAAKE,MAAL,CAAYmD,CAAZ,GAAgB,CAAtC,EAAwC;AACpC,iBAAKnD,MAAL,CAAYmD,CAAZ,GAAgB,CAACkC,KAAKC,GAAL,CAAS,KAAKtF,MAAL,CAAYmD,CAArB,CAAjB;AACH;AACD,YAAG,CAAC,CAAC,KAAKvD,UAAP,IAAqB,KAAKI,MAAL,CAAYkD,CAAZ,GAAgB,CAAxC,EAA0C;AACtC,iBAAKlD,MAAL,CAAYkD,CAAZ,GAAgBmC,KAAKC,GAAL,CAAS,KAAKtF,MAAL,CAAYkD,CAArB,CAAhB;AACH;AACD,YAAG,CAAC,CAAC,KAAKrD,WAAP,IAAsB,KAAKG,MAAL,CAAYkD,CAAZ,GAAgB,CAAzC,EAA2C;AACvC,iBAAKlD,MAAL,CAAYkD,CAAZ,GAAgB,CAACmC,KAAKC,GAAL,CAAS,KAAKtF,MAAL,CAAYkD,CAArB,CAAjB;AACH;AACD,YAAG,CAAC,CAAC,KAAKnD,UAAP,IAAqB,KAAKC,MAAL,CAAYmD,CAAZ,GAAgB,CAAxC,EAA0C;AACtC,iBAAKnD,MAAL,CAAYmD,CAAZ,GAAgB,CAAhB;AACA,iBAAKnD,MAAL,CAAYkD,CAAZ,GAAgB,CAAhB;AACA,gBAAG,KAAKhD,IAAL,CAAUmC,GAAV,CAAc,MAAd,CAAH,EAAyB;AACrB,qBAAKnC,IAAL,CAAU+D,IAAV;AACH;AACJ;AACD,aAAKtD,IAAL,CAAU8D,QAAV,GAAqBtF,GAAG+G,IAAH,CAAQ,KAAKvF,IAAL,CAAU8D,QAAlB,EAA2BtF,GAAGgH,KAAH,CAAS,KAAKnG,MAAd,EAAqBiG,EAArB,CAA3B,CAArB;AAEH;;AAxOI,CAAT",
  "file": "unknown",
  "sourcesContent": [
    "let ColorEnum = cc.Enum({\r\n    'white':0,\r\n    'black':1\r\n});\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    editor: {\r\n        requireComponent: cc.Graphics,\r\n    },\r\n\r\n    properties: {\r\n        _leftBlock: 0,\r\n        _rightBlock: 0,\r\n        _upBlock: 0,\r\n        _downBlock: 0,\r\n        _speed: null,\r\n        g: 0,\r\n        _fsm: null,\r\n        _sUp:true,\r\n        _currentColor:ColorEnum.white,\r\n        currentColor:{\r\n            type: ColorEnum,\r\n            get: function(){\r\n                return this._currentColor;\r\n            },\r\n            set: function(value){\r\n                this._currentColor = value;\r\n                if(value == ColorEnum.white){\r\n                    this.node.getChildByName('player-render').getComponent(cc.Graphics).fillColor = cc.Color.WHITE;\r\n                    this.node.getChildByName('player-render').getComponent(cc.Graphics).strokeColor = cc.Color.BLACK;\r\n                }else{\r\n                    this.node.getChildByName('player-render').getComponent(cc.Graphics).fillColor = cc.Color.BLACK;\r\n                    this.node.getChildByName('player-render').getComponent(cc.Graphics).strokeColor = cc.Color.WHITE;\r\n                }\r\n            }\r\n        },\r\n        _touchColorNum: 0,\r\n    },\r\n\r\n    onLoad: function () {\r\n        this._speed = cc.v2(0,0);\r\n        let manager = cc.director.getCollisionManager();\r\n        manager.enabled = true;\r\n        this._fsm = require('player-fsm').create();\r\n        this._fsm.startup();\r\n        this.node.on('touchstart',this.onTouchStart,this);\r\n        this.node.on('touchend',this.onTouchEnd,this);\r\n        this.node.on('touchmove',this.onTouchMove,this);\r\n        this.node.on('touchcancel',this.onTouchEnd,this);\r\n\r\n        cc.systemEvent.on('keydown',this.onKeyDown,this);\r\n        cc.systemEvent.on('keyup',this.onKeyUp,this);\r\n        //this.node.on('position-changed',this.onPositionChanged,this)\r\n    },\r\n\r\n    // onPositionChanged: function(){\r\n    //     console.log('p-changed');\r\n\r\n    // },\r\n\r\n    onTouchStart: function(e){\r\n        if(this._fsm.can('ready')){\r\n            this._fsm.ready();\r\n            if(this.node.parent.group == 'box'){\r\n                this.node.parent.getComponent('box-script')._moveAble = false;\r\n            }\r\n            let ctx = this.getComponent(cc.Graphics);\r\n            ctx.clear();\r\n            let offset = cc.v2(this.node.width * this.node.anchorX,this.node.height * this.node.anchorY);\r\n            ctx.moveTo(offset.x,offset.y);\r\n            let targetDir = cc.pNeg(this.node.convertToNodeSpaceAR(e.getLocation()));\r\n            ctx.lineTo(targetDir.x + offset.x,targetDir.y + offset.y);\r\n            ctx.stroke();\r\n        }\r\n    },\r\n\r\n    onTouchMove: function(e){\r\n        \r\n        //draw the throw helper line\r\n        if(this._fsm.current == 'readying'){\r\n            let ctx = this.getComponent(cc.Graphics);\r\n            ctx.clear();\r\n            let offset = cc.v2(this.node.width * this.node.anchorX,this.node.height * this.node.anchorY);\r\n            ctx.moveTo(offset.x,offset.y);\r\n            let targetDir = cc.pNeg(this.node.convertToNodeSpaceAR(e.getLocation()));\r\n            ctx.lineTo(targetDir.x + offset.x,targetDir.y + offset.y);\r\n            ctx.stroke();\r\n        }\r\n    },\r\n    \r\n\r\n    onTouchEnd: function(e){\r\n        if(this._fsm.can('fly')){\r\n            this._fsm.fly();\r\n            if(this.node.parent.group == 'box'){\r\n                this.node.parent.getComponent('box-script')._moveAble = true;\r\n            }\r\n            window.throwTime++;\r\n            this._speed = cc.pNeg(this.node.convertToNodeSpaceAR(e.getLocation()));\r\n            let ctx = this.getComponent(cc.Graphics);\r\n            ctx.clear();\r\n        }\r\n    },\r\n\r\n    onKeyDown: function(e){\r\n        if(e.keyCode == cc.KEY.d){\r\n            if(this._fsm.current == 'readying'){\r\n                this._fsm.idle();\r\n                if(this.node.parent.group == 'box'){\r\n                    this.node.parent.getComponent('box-script')._moveAble = true;\r\n                }\r\n                let ctx = this.getComponent(cc.Graphics);\r\n                ctx.clear();\r\n            }\r\n        }\r\n        if(e.keyCode == cc.KEY.s){\r\n            if(this._touchColorNum == 0 && this._sUp){\r\n                this._sUp = false;\r\n                if(this.currentColor == ColorEnum.white){\r\n                    this.currentColor = ColorEnum.black;\r\n                }else{\r\n                    this.currentColor = ColorEnum.white;\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    onKeyUp: function(e){\r\n        if(e.keyCode == cc.KEY.s){\r\n            this._sUp = true;\r\n        }\r\n    },\r\n    \r\n\r\n    onCollisionEnter: function(other,self){\r\n        if(other.node.group == 'box'){\r\n                let targetPosition = other.node.convertToNodeSpaceAR(this.node.parent.convertToWorldSpaceAR(this.node.position));\r\n                this.node.parent = other.node;\r\n                this.node.position = targetPosition;\r\n                return;\r\n        }\r\n        if(other.node.group == 'black' || other.node.group == 'white'){\r\n            this._touchColorNum++;\r\n        }\r\n        if(other.node.group == 'black' && this._currentColor == ColorEnum.white || other.node.group == 'white' && this._currentColor == ColorEnum.black ){\r\n            return;\r\n        }\r\n        if(other.node.group == 'star'){\r\n            return;\r\n        }\r\n        let selfAabb = self.world.aabb;\r\n        let otherAabb = other.world.aabb;\r\n        let selfPreAabb = self.world.preAabb;\r\n        let otherPreAabb = other.world.preAabb;\r\n\r\n        let localBlockArray = [];\r\n\r\n        if(selfPreAabb.xMin >= otherPreAabb.xMax && selfAabb.xMin <= otherAabb.xMax){\r\n            //left block\r\n            this._leftBlock++;\r\n            localBlockArray.push('_leftBlock');\r\n            this.node.x += Math.abs(selfAabb.xMin - otherAabb.xMax);\r\n        }\r\n        if(selfPreAabb.xMax <= otherPreAabb.xMin && selfAabb.xMax >= otherAabb.xMin){\r\n            //right block\r\n            this._rightBlock++;\r\n            localBlockArray.push('_rightBlock');\r\n            this.node.x -= Math.abs(selfAabb.xMax - otherAabb.xMin);\r\n        }\r\n        if(selfPreAabb.yMax <= otherPreAabb.yMin && selfAabb.yMax >= otherAabb.yMin){\r\n            //up block\r\n            this._upBlock++;\r\n            localBlockArray.push('_upBlock');\r\n            this.node.y -= Math.abs(selfAabb.yMax - otherAabb.yMin);\r\n        }\r\n        if(selfPreAabb.yMin >= otherPreAabb.yMax && selfAabb.yMin <= otherAabb.yMax){\r\n            //down block\r\n            this._downBlock++;\r\n            localBlockArray.push('_downBlock');\r\n            this.node.x += Math.abs(selfAabb.yMin - otherAabb.yMax);\r\n            if(this._fsm.can('idle')){\r\n                this._fsm.idle();\r\n            }\r\n        }\r\n        if(other.blockArray == undefined){\r\n            other.blockArray = [];\r\n        }\r\n        other.blockArray[self.node.uuid] = localBlockArray;\r\n        \r\n    },\r\n\r\n    onCollisionExit: function(other,self){\r\n        if(other.node.group == 'box' && other.node.uuid == this.node.parent.uuid){\r\n                let canvas = cc.find('Canvas');\r\n                let targetPosition = canvas.convertToNodeSpaceAR(this.node.parent.convertToWorldSpaceAR(this.node.position));\r\n                this.node.parent = canvas;\r\n                this.node.position = targetPosition;\r\n                return;\r\n        }\r\n        if(other.node.group == 'black' || other.node.group == 'white'){\r\n            this._touchColorNum--;\r\n        }\r\n        if(other.node.group == 'black' && this._currentColor == ColorEnum.white || other.node.group == 'white' && this._currentColor == ColorEnum.black){\r\n            return;\r\n        }\r\n        if(other.node.group == 'star'){\r\n            return;\r\n        }\r\n        if(other.blockArray != undefined){\r\n            for(let item of other.blockArray[self.node.uuid]){\r\n                this[item]--;\r\n            }\r\n        }\r\n    },\r\n\r\n    update: function(dt){\r\n        if(!this._downBlock){this._speed.y = this._speed.y + this.g * dt;}\r\n        if(!!this._upBlock && this._speed.y > 0){\r\n            this._speed.y = -Math.abs(this._speed.y);\r\n        }\r\n        if(!!this._leftBlock && this._speed.x < 0){\r\n            this._speed.x = Math.abs(this._speed.x);\r\n        }\r\n        if(!!this._rightBlock && this._speed.x > 0){\r\n            this._speed.x = -Math.abs(this._speed.x);\r\n        }\r\n        if(!!this._downBlock && this._speed.y < 0){\r\n            this._speed.y = 0;\r\n            this._speed.x = 0;\r\n            if(this._fsm.can('idle')){\r\n                this._fsm.idle();\r\n            }\r\n        }\r\n        this.node.position = cc.pAdd(this.node.position,cc.pMult(this._speed,dt));\r\n        \r\n    }\r\n\r\n});\r\n"
  ]
}