{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [
    "cc",
    "Class",
    "extends",
    "Component",
    "editor",
    "requireComponent",
    "Graphics",
    "properties",
    "_leftOriginPoint",
    "v2",
    "leftOriginPoint",
    "get",
    "set",
    "value",
    "_rightOriginPoint",
    "rightOriginPoint",
    "_upOriginPoint",
    "upOriginPoint",
    "_downOriginPoint",
    "downOriginPoint",
    "_ctrlRate",
    "ctrlRate",
    "toggleUpdateRender",
    "updateRender",
    "_collisionArray",
    "_backUpOriginPointArray",
    "_release",
    "ctx",
    "getComponent",
    "clear",
    "offset",
    "node",
    "width",
    "anchorX",
    "height",
    "anchorY",
    "moveTo",
    "x",
    "y",
    "bezierCurveTo",
    "fill",
    "stroke",
    "onLoad",
    "manager",
    "director",
    "getCollisionManager",
    "enabled",
    "parent",
    "on",
    "onPositionChanged",
    "clone",
    "Object",
    "keys",
    "length",
    "idx",
    "other",
    "updateData",
    "BoxCollider",
    "self",
    "selfAabb",
    "world",
    "aabb",
    "otherAabb",
    "selfPreAabb",
    "enterAabb",
    "uuid",
    "otherPreAabb",
    "updateNum",
    "xMin",
    "xMax",
    "Math",
    "abs",
    "yMax",
    "yMin",
    "onCollisionEnter",
    "group",
    "_currentColor",
    "find",
    "emit",
    "preAabb",
    "undefined",
    "onCollisionExit"
  ],
  "mappings": "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",
  "file": "unknown",
  "sourcesContent": [
    "cc.Class({\r\n    extends: cc.Component,\r\n\r\n    editor: {\r\n        requireComponent: cc.Graphics,\r\n    },\r\n\r\n    properties: {\r\n         _leftOriginPoint: cc.v2(0,0),\r\n        leftOriginPoint: {\r\n            get: function(){ return this._leftOriginPoint},\r\n            set: function(value){ this._leftOriginPoint = value;\r\n                //this.updateRender();\r\n            }\r\n        },\r\n         _rightOriginPoint: cc.v2(0,0),\r\n        rightOriginPoint: {\r\n            get: function(){ return this._rightOriginPoint},\r\n            set: function(value){ this._rightOriginPoint = value;\r\n                //this.updateRender();\r\n            }\r\n        },\r\n         _upOriginPoint: cc.v2(0,0),\r\n        upOriginPoint: {\r\n            get: function(){ return this._upOriginPoint},\r\n            set: function(value){ this._upOriginPoint = value;\r\n                //this.updateRender();\r\n            }\r\n        },\r\n         _downOriginPoint: cc.v2(0,0),\r\n        downOriginPoint: {\r\n            get: function(){ return this._downOriginPoint},\r\n            set: function(value){ this._downOriginPoint = value;\r\n                //this.updateRender();\r\n            }\r\n        },\r\n        _ctrlRate: 0.5,\r\n        ctrlRate: {\r\n            get: function(){\r\n                return this._ctrlRate;\r\n            },\r\n            set: function(value){\r\n                this._ctrlRate = value;\r\n                //this.updateRender();\r\n            }\r\n        },\r\n\r\n        toggleUpdateRender:{\r\n            get: function(){return false},\r\n            set: function(){this.updateRender()}\r\n        },\r\n\r\n        _collisionArray: [],\r\n        _backUpOriginPointArray: [],\r\n        _release: false,\r\n    },\r\n\r\n    updateRender: function(){\r\n        let ctx = this.getComponent(cc.Graphics);\r\n        ctx.clear();\r\n        // let upPoint = this._upOriginPoint;\r\n        // let rightPoint = this._rightOriginPoint;\r\n        // let rightUpCtrlPoint = cc.v2(this._rightOriginPoint.x,this._upOriginPoint.y);\r\n        // let downPoint = this._downOriginPoint;\r\n        // let rightDownCtrlPoint = cc.v2(this._rightOriginPoint.x,this._downOriginPoint.y);\r\n        // let leftPoint = this._leftOriginPoint;\r\n        // let leftDownPoint = cc.v2(this._leftOriginPoint.x,this._downOriginPoint.y);\r\n        // let leftUpPoint = cc.v2(this._leftOriginPoint.x,this._upOriginPoint.y);\r\n\r\n        let offset = cc.v2(this.node.width * this.node.anchorX,this.node.height * this.node.anchorY);\r\n        //Editor.log(offset.x,offset.y);\r\n        \r\n        //up\r\n        ctx.moveTo(this._upOriginPoint.x + offset.x,this._upOriginPoint.y + offset.y);\r\n        //up right \r\n        ctx.bezierCurveTo(this._rightOriginPoint.x*this._ctrlRate + offset.x,this._upOriginPoint.y + offset.y,this._rightOriginPoint.x + offset.x,this._upOriginPoint.y*this._ctrlRate + offset.y,this._rightOriginPoint.x + offset.x,this._rightOriginPoint.y + offset.y);\r\n        //right down\r\n        ctx.bezierCurveTo(this._rightOriginPoint.x + offset.x,this._downOriginPoint.y*this._ctrlRate + offset.y,this._rightOriginPoint.x*this._ctrlRate + offset.x,this._downOriginPoint.y + offset.y,this._downOriginPoint.x + offset.x,this._downOriginPoint.y + offset.y);\r\n        //down left\r\n        ctx.bezierCurveTo(this._leftOriginPoint.x*this._ctrlRate + offset.x,this._downOriginPoint.y + offset.y,this._leftOriginPoint.x + offset.x,this._downOriginPoint.y*this._ctrlRate + offset.y,this._leftOriginPoint.x + offset.x,this._leftOriginPoint.y + offset.y);\r\n        //left up\r\n        ctx.bezierCurveTo(this._leftOriginPoint.x + offset.x,this._upOriginPoint.y*this._ctrlRate + offset.y,this._leftOriginPoint.x*this._ctrlRate + offset.x,this._upOriginPoint.y + offset.y,this._upOriginPoint.x + offset.x,this._upOriginPoint.y + offset.y);\r\n        ctx.fill();\r\n        ctx.stroke();\r\n        \r\n        \r\n        \r\n    },\r\n\r\n    onLoad: function () {\r\n        let manager = cc.director.getCollisionManager();\r\n        manager.enabled = true;\r\n        this.updateRender();\r\n        //this.node.runAction(cc.moveBy(1,30,0));\r\n        //this.node.on('touchmove',this.onTouchMove,this)\r\n        this.node.parent.on('position-changed',this.onPositionChanged,this);\r\n        this._backUpOriginPointArray['_leftOriginPoint'] = this._leftOriginPoint.clone();\r\n        this._backUpOriginPointArray['_rightOriginPoint'] = this._rightOriginPoint.clone();\r\n        this._backUpOriginPointArray['_upOriginPoint'] = this._upOriginPoint.clone();\r\n        this._backUpOriginPointArray['_downOriginPoint'] = this._downOriginPoint.clone(); \r\n    },\r\n\r\n    // onTouchMove: function(e){\r\n    //       this.node.parent.position = this.node.parent.parent.convertToNodeSpaceAR(e.getLocation());\r\n    // },\r\n    onPositionChanged: function(){\r\n        //console.log('p-changed-child');\r\n        if(Object.keys(this._collisionArray).length == 0 && !this._release){\r\n            this._release = true;\r\n            for(let idx in this._backUpOriginPointArray){\r\n                this[idx] = this._backUpOriginPointArray[idx];\r\n            }\r\n            this.updateRender();\r\n            return;\r\n        }else{\r\n            this._release = false;\r\n        }\r\n        for(let idx in this._collisionArray){\r\n            let other = this._collisionArray[idx];\r\n            this.updateData(other,this.getComponent(cc.BoxCollider));\r\n        }\r\n        \r\n    },\r\n\r\n    updateData: function(other,self){\r\n        let selfAabb = self.world.aabb;\r\n        let otherAabb = other.world.aabb;\r\n        //let selfPreAabb = self.world.preAabb;\r\n        //let otherPreAabb = other.world.preAabb;\r\n        let selfPreAabb = self.node.enterAabb[other.node.uuid];\r\n        let otherPreAabb = other.world.enterAabb;\r\n\r\n        let updateNum = 0;\r\n\r\n        if(selfPreAabb.xMin >= otherPreAabb.xMax && selfAabb.xMin <= otherAabb.xMax){\r\n            //left block\r\n            //this.node.x += Math.abs(selfAabb.xMin - otherAabb.xMax);\r\n            this._leftOriginPoint = cc.v2(-this.node.width/2 + Math.abs(selfAabb.xMin - otherAabb.xMax),0)\r\n            updateNum++;\r\n        }\r\n        if(selfPreAabb.xMax <= otherPreAabb.xMin && selfAabb.xMax >= otherAabb.xMin){\r\n            //right block\r\n\r\n            //this.node.x -= Math.abs(selfAabb.xMax - otherAabb.xMin);\r\n            this._rightOriginPoint = cc.v2(this.node.width/2 - Math.abs(selfAabb.xMax - otherAabb.xMin),0)\r\n            updateNum++;\r\n        }\r\n        if(selfPreAabb.yMax <= otherPreAabb.yMin && selfAabb.yMax >= otherAabb.yMin){\r\n            //up block\r\n\r\n            //this.node.y -= Math.abs(selfAabb.yMax - otherAabb.yMin);\r\n            this._upOriginPoint = cc.v2(0,this.node.height/2 - Math.abs(selfAabb.yMax - otherAabb.yMin))\r\n            updateNum++;\r\n        }\r\n        if(selfPreAabb.yMin >= otherPreAabb.yMax && selfAabb.yMin <= otherAabb.yMax){\r\n            //down block\r\n            //this.node.x += Math.abs(selfAabb.yMin - otherAabb.yMax);\r\n            this._downOriginPoint = cc.v2(0,-this.node.height/2 + Math.abs(selfAabb.yMin - otherAabb.yMax));\r\n            updateNum++;\r\n        }\r\n        if(updateNum!=0){\r\n            this.updateRender();\r\n        }\r\n    },\r\n\r\n    onCollisionEnter: function(other,self){\r\n        if(other.node.group == 'black' && this.node.parent.getComponent('player-script')._currentColor == 0 || other.node.group == 'white' && this.node.parent.getComponent('player-script')._currentColor == 1 ){\r\n            return;\r\n        }\r\n        if(other.node.group == 'star'){\r\n            return;\r\n        }\r\n        if(other.node.group == 'red'){\r\n            cc.find('Canvas').emit('restart');\r\n        }\r\n        other.world.enterAabb = other.world.preAabb.clone();\r\n        if(self.node.enterAabb == undefined){self.node.enterAabb = []}\r\n        self.node.enterAabb[other.node.uuid] = self.world.preAabb.clone();\r\n        //this.updateDate(other,self);\r\n        this._collisionArray[other.node.uuid] = other;\r\n    },\r\n\r\n    onCollisionExit: function(other,self){\r\n        if(other.node.group == 'black' && this.node.parent.getComponent('player-script')._currentColor == 0 || other.node.group == 'white' && this.node.parent.getComponent('player-script')._currentColor == 1 ){\r\n            return;\r\n        }\r\n        if(other.node.group == 'star'){\r\n            return;\r\n        }\r\n        delete other.world.enterAabb;\r\n        delete self.node.enterAabb[other.node.uuid];\r\n        delete this._collisionArray[other.node.uuid];\r\n    }\r\n\r\n\r\n});\r\n"
  ]
}